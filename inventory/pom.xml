<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>

	<parent>
		<groupId>io.openshift</groupId>
		<artifactId>booster-parent</artifactId>
		<version>10</version>
	</parent>

	<groupId>org.meetup.openshift.rhoar</groupId>
	<artifactId>inventory</artifactId>
	<version>0.0.1-SNAPSHOT</version>
	<packaging>war</packaging>

	<properties>
		<version.wildfly.swarm>7.0.0.redhat-8</version.wildfly.swarm>
		<version.resteasy>3.0.19.Final</version.resteasy>
		<version.arquillian.cube>1.9.2</version.arquillian.cube>
		<version.override.jackson>2.7.7</version.override.jackson>
		<version.h2>1.4.187</version.h2>
		<version.postgresql>9.4.1207</version.postgresql>
		<licenses.pom.file>pom.xml</licenses.pom.file>

		<failOnMissingWebXml>false</failOnMissingWebXml>
	</properties>

	<dependencyManagement>
		<dependencies>
			<dependency>
				<groupId>org.wildfly.swarm</groupId>
				<artifactId>bom</artifactId>
				<version>${version.wildfly.swarm}</version>
				<type>pom</type>
				<scope>import</scope>
			</dependency>
			<dependency>
				<groupId>org.wildfly.swarm</groupId>
				<artifactId>bom-certified</artifactId>
				<version>${version.wildfly.swarm}</version>
				<type>pom</type>
				<scope>import</scope>
			</dependency>

			<dependency>
				<groupId>org.arquillian.cube</groupId>
				<artifactId>arquillian-cube-bom</artifactId>
				<version>${version.arquillian.cube}</version>
				<type>pom</type>
				<scope>import</scope>
			</dependency>
		</dependencies>
	</dependencyManagement>

	<dependencies>
		<dependency>
			<groupId>org.wildfly.swarm</groupId>
			<artifactId>jaxrs-jsonp</artifactId>
		</dependency>

		<dependency>
			<groupId>org.wildfly.swarm</groupId>
			<artifactId>cdi</artifactId>
		</dependency>

		<dependency>
			<groupId>org.wildfly.swarm</groupId>
			<artifactId>cdi-config</artifactId>
		</dependency>

		<dependency>
			<groupId>org.wildfly.swarm</groupId>
			<artifactId>jpa</artifactId>
		</dependency>

		<dependency>
			<groupId>org.wildfly.swarm</groupId>
			<artifactId>monitor</artifactId>
		</dependency>

		<dependency>
			<groupId>io.opentracing.contrib</groupId>
			<artifactId>opentracing-jaxrs2</artifactId>
			<version>0.1.0</version>
		</dependency>

		<dependency>
			<groupId>com.uber.jaeger</groupId>
			<artifactId>jaeger-core</artifactId>
			<version>0.23.0</version>
		</dependency>

		<dependency>
			<groupId>org.jboss.resteasy</groupId>
			<artifactId>resteasy-client</artifactId>
			<version>${version.resteasy}</version>
			<scope>test</scope>
		</dependency>

		<dependency>
			<groupId>commons-logging</groupId>
			<artifactId>commons-logging</artifactId>
			<version>1.1.1</version>
			<scope>test</scope>
		</dependency>

		<dependency>
			<groupId>org.wildfly.swarm</groupId>
			<artifactId>arquillian</artifactId>
			<scope>test</scope>
		</dependency>

		<dependency>
			<groupId>org.jboss.arquillian.junit</groupId>
			<artifactId>arquillian-junit-container</artifactId>
			<version>1.1.12.Final</version>
			<scope>test</scope>
		</dependency>



		<dependency>
			<groupId>org.jboss.resteasy</groupId>
			<artifactId>resteasy-jackson2-provider</artifactId>
			<version>${version.resteasy}</version>
			<scope>test</scope>
		</dependency>

		<dependency>
			<groupId>com.h2database</groupId>
			<artifactId>h2</artifactId>
			<version>${version.h2}</version>
			<scope>test</scope>
		</dependency>

		<dependency>
			<groupId>org.jboss.shrinkwrap.resolver</groupId>
			<artifactId>shrinkwrap-resolver-bom</artifactId>
			<version>3.1.3</version>
			<type>pom</type>
			<scope>test</scope>
		</dependency>
	</dependencies>

	<build>
		<plugins>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-surefire-plugin</artifactId>
				<configuration>
					<classpathDependencyExcludes>
						<classpathDependencyExclude>org.arquillian.cube:arquillian-cube-openshift</classpathDependencyExclude>
						<classpathDependencyExclude>org.arquillian.cube:arquillian-cube-kubernetes</classpathDependencyExclude>
					</classpathDependencyExcludes>
					<systemPropertyVariables>
						<swarm.build.repos>https://maven.repository.redhat.com/ga/,https://maven.repository.redhat.com/earlyaccess/all/</swarm.build.repos>
					</systemPropertyVariables>
				</configuration>
			</plugin>

			<plugin>
				<groupId>org.wildfly.swarm</groupId>
				<artifactId>wildfly-swarm-plugin</artifactId>
				<version>${version.wildfly.swarm}</version>
				<executions>
					<execution>
						<goals>
							<goal>package</goal>
						</goals>
					</execution>
				</executions>
				<configuration>
					<arguments>
						<argument>-S</argument>
						<argument>local</argument>
					</arguments>
				</configuration>
			</plugin>

			<plugin>
				<artifactId>maven-war-plugin</artifactId>
				<configuration>
					<failOnMissingWebXml>false</failOnMissingWebXml>
				</configuration>
			</plugin>
		</plugins>
	</build>

	<profiles>
		<profile>
			<id>local</id>
			<activation>
			</activation>
			<dependencies>
				<dependency>
					<groupId>com.h2database</groupId>
					<artifactId>h2</artifactId>
					<version>${version.h2}</version>
				</dependency>
			</dependencies>
			<build>
				<plugins>
					<plugin>
						<groupId>org.apache.maven.plugins</groupId>
						<artifactId>maven-surefire-plugin</artifactId>
						<configuration>
							<systemPropertyVariables>
								<swarm.project.stage>local</swarm.project.stage>
							</systemPropertyVariables>
						</configuration>
					</plugin>
				</plugins>
			</build>
		</profile>

		<profile>
			<id>openshift</id>
			<build>
				<plugins>
					<plugin>
						<groupId>io.fabric8</groupId>
						<artifactId>fabric8-maven-plugin</artifactId>
						<executions>
							<execution>
								<goals>
									<goal>resource</goal>
									<goal>build</goal>
								</goals>
							</execution>
						</executions>
						<configuration>
							<generator>
								<includes>
									<include>wildfly-swarm</include>
								</includes>
								<excludes>
									<exclude>webapp</exclude>
								</excludes>
							</generator>
							<enricher>
								<config>
									<wildfly-swarm-health-check>
										<path>/health</path>
									</wildfly-swarm-health-check>
								</config>
							</enricher>
						</configuration>
					</plugin>
					<plugin>
						<groupId>org.apache.maven.plugins</groupId>
						<artifactId>maven-surefire-plugin</artifactId>
						<configuration>
							<skipTests>true</skipTests>
						</configuration>
					</plugin>
				</plugins>
			</build>
			<activation />
			<dependencies>
				<dependency>
					<groupId>org.postgresql</groupId>
					<artifactId>postgresql</artifactId>
					<version>${version.postgresql}</version>
				</dependency>
			</dependencies>
		</profile>

		<profile>
			<id>openshift-it</id>
			<build>
				<plugins>
					<plugin>
						<groupId>org.apache.maven.plugins</groupId>
						<artifactId>maven-surefire-plugin</artifactId>
						<configuration>
							<skipTests>true</skipTests>
						</configuration>
					</plugin>
					<!-- - 1. - - For running the test, we need the Jackson dependencies 
						in a higher version than what is brought in by Swarm. - Unfortunately, Failsafe 
						can't be configured do add specific artifacts to the test classpath, just 
						files, - so we need to download the dependencies manually. This is what this 
						plugin execution does. -->
					<plugin>
						<groupId>org.apache.maven.plugins</groupId>
						<artifactId>maven-dependency-plugin</artifactId>
						<executions>
							<execution>
								<id>prepare-jackson-dependencies-for-integration-test</id>
								<phase>pre-integration-test</phase>
								<goals>
									<goal>copy</goal>
								</goals>
								<configuration>
									<stripVersion>true</stripVersion>
									<artifactItems>
										<artifactItem>
											<groupId>com.fasterxml.jackson.core</groupId>
											<artifactId>jackson-core</artifactId>
											<version>${version.override.jackson}</version>
										</artifactItem>
										<artifactItem>
											<groupId>com.fasterxml.jackson.core</groupId>
											<artifactId>jackson-annotations</artifactId>
											<version>${version.override.jackson}</version>
										</artifactItem>
										<artifactItem>
											<groupId>com.fasterxml.jackson.core</groupId>
											<artifactId>jackson-databind</artifactId>
											<version>${version.override.jackson}</version>
										</artifactItem>
									</artifactItems>
								</configuration>
							</execution>
						</executions>
					</plugin>
					<plugin>
						<groupId>org.apache.maven.plugins</groupId>
						<artifactId>maven-failsafe-plugin</artifactId>
						<configuration>
							<!-- - 2. - - These artifacts are added to the test classpath automatically 
								because they are project dependencies. - However, they are of too old versions, 
								so we remove them here and add correct versions later. -->
							<classpathDependencyExcludes>
								<classpathDependencyExclude>com.fasterxml.jackson.core:jackson-core</classpathDependencyExclude>
								<classpathDependencyExclude>com.fasterxml.jackson.core:jackson-annotations</classpathDependencyExclude>
								<classpathDependencyExclude>com.fasterxml.jackson.core:jackson-databind</classpathDependencyExclude>
							</classpathDependencyExcludes>
							<!-- - 3. - - And here, we add the correct versions of the artifacts 
								to test classpath. Unfortunately, - this is only possible by file paths, 
								not by artifact coordinates. -->
							<additionalClasspathElements>
								<additionalClasspathElement>${project.build.directory}/dependency/jackson-core.jar</additionalClasspathElement>
								<additionalClasspathElement>${project.build.directory}/dependency/jackson-annotations.jar</additionalClasspathElement>
								<additionalClasspathElement>${project.build.directory}/dependency/jackson-databind.jar</additionalClasspathElement>
							</additionalClasspathElements>
							<systemPropertyVariables>
								<app.name>${project.artifactId}</app.name>
							</systemPropertyVariables>
						</configuration>
						<executions>
							<execution>
								<goals>
									<goal>integration-test</goal>
									<goal>verify</goal>
								</goals>
							</execution>
						</executions>
					</plugin>
				</plugins>
			</build>
			<activation />
		</profile>

	</profiles>

</project>